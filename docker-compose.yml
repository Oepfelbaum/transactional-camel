services:
  apache-camel:
    build: ./
    depends_on:
      - ibmmq
      - kafka
  ibmmq:
    image: icr.io/ibm-messaging/mq:9.3.0.17-r2
    ports:
      - "1414:1414"
      - "9443:9443"
    environment:
      - MQ_DEV=true
      - MQ_QMGR_NAME=QM1
      - LICENSE=accept
      - MQ_ADMIN_PASSWORD=passw0rd
      - MQ_APP_PASSWORD=passw0rd
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  kafkaui:
    image: provectuslabs/kafka-ui:master
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - kafkadata:/bitnami/kafka
  node-rest-sink:
    build: ./node-rest-server/
    ports:
      - "3000:3000"

volumes:
  kafkadata:
    driver: local
  kafka_data:
    driver: local
